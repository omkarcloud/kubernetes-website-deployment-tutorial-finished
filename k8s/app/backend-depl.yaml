apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: csi-pvc

      containers:
        - name: backend
          image: chetan1111/backend:1.0.5
          volumeMounts:
            - mountPath: /app-data
              name: app-data
          env:
            - name: DOMAIN_NAME
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: DOMAIN_NAME
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: OAUTH_CLIENT_ID
            - name: SENDINBLUE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: SENDINBLUE_API_KEY
            - name: SECRET_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: SECRET_ACCESS_TOKEN
            - name: SECRET_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: SECRET_REFRESH_TOKEN
            - name: BACKEND_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: BACKEND_SECRET
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: DATABASE_PASSWORD
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: AWS_ACCESS_KEY_ID

            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: AWS_SECRET_ACCESS_KEY
      #   - image: gcr.io/cloudsql-docker/gce-proxy:1.16
      #     name: cloudsql-proxy
      #     command:
      #       [
      #         "/cloud_sql_proxy",
      #         "--dir=/cloudsql",
      #         "-instances=clear-shell-346807:us-central1:omkar=tcp:5432",
      #         "-credential_file=/secrets/cloudsql/account.json",
      #       ]
      #     volumeMounts:
      #       - name: secrets
      #         mountPath: /secrets/cloudsql
      #         readOnly: true
      #       - name: ssl-certs
      #         mountPath: /etc/ssl/certs
      #       - name: cloudsql
      #         mountPath: /cloudsql
      # volumes:
      #   - name: secrets
      #     secret:
      #       secretName: secrets
      #   - name: ssl-certs
      #     hostPaeEeth:
      #       path: /etc/ssl/certs
      #   - name: cloudsql
      #     emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend-srv
spec:
  selector:
    app: backend
  ports:
    - name: backend
      protocol: TCP
      port: 8000
      targetPort: 8000
